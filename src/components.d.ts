/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */


import {
  NumberInput as MyNumberInput
} from './components/my-number-input/my-number-input';

declare global {
  interface HTMLMyNumberInputElement extends MyNumberInput, HTMLElement {
  }
  var HTMLMyNumberInputElement: {
    prototype: HTMLMyNumberInputElement;
    new (): HTMLMyNumberInputElement;
  };
  interface HTMLElementTagNameMap {
    "my-number-input": HTMLMyNumberInputElement;
  }
  interface ElementTagNameMap {
    "my-number-input": HTMLMyNumberInputElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "my-number-input": JSXElements.MyNumberInputAttributes;
    }
  }
  namespace JSXElements {
    export interface MyNumberInputAttributes extends HTMLAttributes {
      for?: string;
      id?: string;
      title?: string;
      value?: number;
    }
  }
}


import {
  MyTextInput as MyTextInput
} from './components/my-text-input/my-text-input';

declare global {
  interface HTMLMyTextInputElement extends MyTextInput, HTMLElement {
  }
  var HTMLMyTextInputElement: {
    prototype: HTMLMyTextInputElement;
    new (): HTMLMyTextInputElement;
  };
  interface HTMLElementTagNameMap {
    "my-text-input": HTMLMyTextInputElement;
  }
  interface ElementTagNameMap {
    "my-text-input": HTMLMyTextInputElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "my-text-input": JSXElements.MyTextInputAttributes;
    }
  }
  namespace JSXElements {
    export interface MyTextInputAttributes extends HTMLAttributes {
      for?: string;
      id?: string;
      title?: string;
      value?: string;
    }
  }
}

