/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */


import {
  MyButton as MyButton
} from './components/my-button/my-button';

declare global {
  interface HTMLMyButtonElement extends MyButton, HTMLElement {
  }
  var HTMLMyButtonElement: {
    prototype: HTMLMyButtonElement;
    new (): HTMLMyButtonElement;
  };
  interface HTMLElementTagNameMap {
    "my-button": HTMLMyButtonElement;
  }
  interface ElementTagNameMap {
    "my-button": HTMLMyButtonElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "my-button": JSXElements.MyButtonAttributes;
    }
  }
  namespace JSXElements {
    export interface MyButtonAttributes extends HTMLAttributes {
      allTitles?: any;
      for?: string;
    }
  }
}


import {
  MyDynamicForm as MyDynamicForm
} from './components/my-dynamic-form/my-dynamic-form';

declare global {
  interface HTMLMyDynamicFormElement extends MyDynamicForm, HTMLElement {
  }
  var HTMLMyDynamicFormElement: {
    prototype: HTMLMyDynamicFormElement;
    new (): HTMLMyDynamicFormElement;
  };
  interface HTMLElementTagNameMap {
    "my-dynamic-form": HTMLMyDynamicFormElement;
  }
  interface ElementTagNameMap {
    "my-dynamic-form": HTMLMyDynamicFormElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "my-dynamic-form": JSXElements.MyDynamicFormAttributes;
    }
  }
  namespace JSXElements {
    export interface MyDynamicFormAttributes extends HTMLAttributes {
      form?: any;
      schema?: any;
    }
  }
}

